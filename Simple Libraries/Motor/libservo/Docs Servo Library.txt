<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Servo Library: servo.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Servo Library
   &#160;<span id="projectnumber">v0.8</span>
   </div>
   <div id="projectbrief">Servo motor control library for educational and hobby applications</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">servo.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>WARNING, CONSTRUCTION ZONE: This is a preliminary library, major revisions pending, not for release. Control servos in other cog. Number of servos depends on the library file you use. For example, servo.c can control up to seven servos. Since this library automatically delivers control pulses to the servos every 20 ms, all you have to do is use the set method to pick the pin the servo is connected to and the duration of the control pulses.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;simpletools.h&quot;</code><br/>
</div>
<p><a href="html/servo_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a05ba0e7c3ace1944dd32bc88751abc6e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#a05ba0e7c3ace1944dd32bc88751abc6e">servoAngle</a> (int pin, int degreeTenths)</td></tr>
<tr class="memdesc:a05ba0e7c3ace1944dd32bc88751abc6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Parallax Standard Servo to angle from 0 to 180 in tenths of a degree.  <a href="#a05ba0e7c3ace1944dd32bc88751abc6e"></a><br/></td></tr>
<tr class="memitem:a94d5be9538a32caa76c42fd14bcb7d21"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#a94d5be9538a32caa76c42fd14bcb7d21">servoSpeed</a> (int pin, int speed)</td></tr>
<tr class="memdesc:a94d5be9538a32caa76c42fd14bcb7d21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Parallax Continous Rotation Servo speed.  <a href="#a94d5be9538a32caa76c42fd14bcb7d21"></a><br/></td></tr>
<tr class="memitem:aff0b602b6e2bc3c89f69491fd18ebc22"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#aff0b602b6e2bc3c89f69491fd18ebc22">servoSet</a> (int pin, int time)</td></tr>
<tr class="memdesc:aff0b602b6e2bc3c89f69491fd18ebc22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets servo control signal to servo connected to a given pin.  <a href="#aff0b602b6e2bc3c89f69491fd18ebc22"></a><br/></td></tr>
<tr class="memitem:aa28775f27b9aefc45bba220d54bd096f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#aa28775f27b9aefc45bba220d54bd096f">rampStep</a> (int pin, int stepSize)</td></tr>
<tr class="memdesc:aa28775f27b9aefc45bba220d54bd096f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the maximum change in control signal a servo will change in a given 20 ms time period.  <a href="#aa28775f27b9aefc45bba220d54bd096f"></a><br/></td></tr>
<tr class="memitem:a5e5d69c0ae2e411f755febf8db668f02"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#a5e5d69c0ae2e411f755febf8db668f02">servoGet</a> (int pin)</td></tr>
<tr class="memdesc:a5e5d69c0ae2e411f755febf8db668f02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports the number of microseconds of the pulse most recently sent to a given servo.  <a href="#a5e5d69c0ae2e411f755febf8db668f02"></a><br/></td></tr>
<tr class="memitem:abd72690191b7fc13112fc5a9a7596991"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd72690191b7fc13112fc5a9a7596991"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#abd72690191b7fc13112fc5a9a7596991">servoStop</a> (void)</td></tr>
<tr class="memdesc:abd72690191b7fc13112fc5a9a7596991"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops the servo process and frees a cog. <br/></td></tr>
<tr class="memitem:a5b81f24638c8dd27f866cbf24b338f98"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="html/servo_8h.html#a5b81f24638c8dd27f866cbf24b338f98">servoStart</a> (void)</td></tr>
<tr class="memdesc:a5b81f24638c8dd27f866cbf24b338f98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the servo process and takes over a cog.  <a href="#a5b81f24638c8dd27f866cbf24b338f98"></a><br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>WARNING, CONSTRUCTION ZONE: This is a preliminary library, major revisions pending, not for release. Control servos in other cog. Number of servos depends on the library file you use. For example, servo.c can control up to seven servos. Since this library automatically delivers control pulses to the servos every 20 ms, all you have to do is use the set method to pick the pin the servo is connected to and the duration of the control pulses. </p>
<dl class="section author"><dt>Author</dt><dd>Andy Lindsay</dd></dl>
<dl class="section version"><dt>Version</dt><dd>dev001</dd></dl>
<dl class="section copyright"><dt>Copyright</dt><dd>Copyright (C) Parallax, Inc. 2012. See end of file for terms of use (MIT License).</dd></dl>
<p>Parallax standard servos have a position range from approximately 0 to 180 degrees. For 0 degrees, use control pulses of</p>
<p>Please submit bug reports, suggestions, and improvements to this code to <a href="#" onclick="location.href='mai'+'lto:'+'edi'+'to'+'r@p'+'ar'+'all'+'ax'+'.co'+'m'; return false;">edito<span style="display: none;">.nosp@m.</span>r@pa<span style="display: none;">.nosp@m.</span>ralla<span style="display: none;">.nosp@m.</span>x.co<span style="display: none;">.nosp@m.</span>m</a>. </p>
</div><h2>Function Documentation</h2>
<a class="anchor" id="aa28775f27b9aefc45bba220d54bd096f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int rampStep </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>stepSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the maximum change in control signal a servo will change in a given 20 ms time period. </p>
<p>This function allows you to make a Parallax Continuous Rotation servo ramp up to and down from whatever speed it was previously set to. It also allows you to set the rate at which a Parallax Standard Servo turns from its previous position to a new position.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin</td><td>Number of the I/O pin the servo is connected to </td></tr>
    <tr><td class="paramname">stepSize</td><td>The number of microseconds per 20 ms of time that the servo's control signal is allowed to change. This equates to the number of tenths of a degree a Parallax Standard Servo is allowed to change, or the number of 100ths of full speed the a Parallax Continuous Rotation servo is allowed to change per 20 ms.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if successful, 0 if pin not found. </dd></dl>

</div>
</div>
<a class="anchor" id="a05ba0e7c3ace1944dd32bc88751abc6e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int servoAngle </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>degreeTenths</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set Parallax Standard Servo to angle from 0 to 180 in tenths of a degree. </p>
<p>Examples:</p>
<ul>
<li>servoAngle(pin, 0); // for 0 degrees </li>
<li>servoAngle(pin, 900); // for 90 degrees </li>
<li>servoAngle(pin, 1800); // for 180 degrees</li>
</ul>
<p>0 to 1800 corresponds to control pulses ranging from 500 to 2300 with 1400 at center (90 degrees), which is slightly different from the 1500 center convention, but it places the servo's range of motion neatly between its mechanical limits.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin</td><td>Number of the I/O pin connected to servo </td></tr>
    <tr><td class="paramname">degreeAngle</td><td>Tenths of a degree from 0 to 1800</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if successful, 0 if no cogs or 1 if no locks. </dd></dl>

</div>
</div>
<a class="anchor" id="a5e5d69c0ae2e411f755febf8db668f02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int servoGet </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports the number of microseconds of the pulse most recently sent to a given servo. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin</td><td>Number of the I/O pin the servo is connected to</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>tp[i] The value stored by the array element that keeps duration of the most recent pulse sent to the servo. (Or -1 if an entry is not found for the pin argument. </dd></dl>

</div>
</div>
<a class="anchor" id="aff0b602b6e2bc3c89f69491fd18ebc22"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int servoSet </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>time</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets servo control signal to servo connected to a given pin. </p>
<p>This function directly controls the number of microseconds servo control pulses last.</p>
<p>Examples:</p>
<ul>
<li>0 degrees -&gt; servoSet(pin, 500); </li>
<li>90 degrees -&gt; servoSet(pin, 1400); </li>
<li>180 degrees -&gt; servoSet(pin, 2300);</li>
</ul>
<p>500, 1400, and 2300 are the number of microseconds (us) the control pulses stay high. More generally, a microsecond above 500 corresponds to 1/10 of a degree clockwise of 0 degrees. So, for a given degree position, use:</p>
<p>degree position = 500 + (number of 10ths of a degree)</p>
<p>For setting continuous rotation servo speed, use:</p>
<ul>
<li>Full speed clockwise -&gt; servoSet(pin, 1400); </li>
<li>Stay still -&gt; servoSet(pin, 1500); </li>
<li>Full speed counterclockwise -&gt; servoSet(pin, 1600);</li>
</ul>
<p>Values in the 1400 to 1600 range are (roughly) proportional to speed, but it's not nearly as precise as position control. Setting full speeds at 1300 and 1700 is a common practice to make sure both servos are going as fast as they possibly can.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin</td><td>Number of the I/O pin that sends signals to the servo</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>. </dd></dl>

</div>
</div>
<a class="anchor" id="a94d5be9538a32caa76c42fd14bcb7d21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int servoSpeed </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>speed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set Parallax Continous Rotation Servo speed. </p>
<p>Examples:</p>
<ul>
<li>servoSpeed(pin, 200); // Twice full speed counterclockwise </li>
<li>servoSpeed(pin, 100); // Full speed counterclockwise </li>
<li>servoSpeed(pin, 0); // Stay still </li>
<li>servoSpeed(pin, -100); // Full speed clockwise </li>
<li>servoSpeed(pin, -200); // Twice full speed clockwise</li>
</ul>
<p>100 to -100 corresponds to the linear speed control range. For example, servoSpeed(pin, 75) will set the speed to roughly 75% of full speed counterclockwise. This is a very rough approximation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin</td><td>Number of the I/O pin connected to servo </td></tr>
    <tr><td class="paramname">degreeAngle</td><td>Tenths of a degree from 0 to 1800</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if successful, 0 if no cogs or 1 if no locks. </dd></dl>

</div>
</div>
<a class="anchor" id="a5b81f24638c8dd27f866cbf24b338f98"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int servoStart </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the servo process and takes over a cog. </p>
<p>You do not need to call this function from your code because the servoSet function calls it if it detects that the servo cog has not been started.</p>
<dl class="section return"><dt>Returns</dt><dd>1..8 if successful. 0 if no available cogs, -1 if no avialable locks. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Jan 27 2013 17:40:35 for Servo Library by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
